Neo4j Database Schema
=====================

Nodes
-----

(:Comment)
id:                 string NOT NULL INDEX
revisionId:         string
ownerFullName:      string
heading:            string
bodyPreview:        string                  (Body)
createdAt:          int                     (sec timestamp)
editedAt:           int                     (sec timestamp)
viewPrincipal:      string
scan:               boolean/int             (ScanStatus)
scannedAt:          int                     (ms timestamp)
documentId:         string
INDEX ON (scan, scannedAt)

(:Favor)
value               float NOT NULL
decayHours          int NOT NULL
createdAt           int NOT NULL            (ms timestamp)
deadline            int NOT NULL INDEX      (ms timestamp)

(:Job)
id:                 string NOT NULL UNIQUE
jobType:            string NOT NULL
jobKey:             string INDEX
parameters:         string NOT NULL
state:              string
retries:            int
waitUntil:          int                     (ms timestamp)

(:MediaFile)
id:                 string NOT NULL UNIQUE
mimeType:           string NOT NULL
sizeX: int
sizeY: int
orientation:        int NOT NULL
fileSize:           int NOT NULL
exposed:            boolean NOT NULL
digest: byte[]
createdAt:          int NOT NULL            (ms timestamp)

(:MoeraNode)
name:               string NOT NULL UNIQUE
fullName:           string FULLTEXT INDEX
title: string
scanProfile:        boolean/int             (ScanStatus)
profileScannedAt:   int                     (ms timestamp)
subscriberId:       string
scanPeople:         boolean/int             (ScanStatus)
peopleScannedAt:    int                     (ms timestamp)
closeToUpdatedAt:   int                     (ms timestamp)
scanTimeline:       boolean/int             (ScanStatus)
timelineScannedAt:  int                     (ms timestamp)
INDEX ON (scanProfile, profileScannedAt)
INDEX ON (scanPeople, peopleScannedAt)
INDEX ON (closeToUpdatedAt)
INDEX ON (scanTimeline, timelineScannedAt)

(:NamingService) UNIQUE
scanTimestamp:      int NOT NULL
scannedAt:          int                     (ms timestamp)

(:PendingUpdate)
id:                 string NOT NULL UNIQUE
type:               string NOT NULL
jobParameters:      string NOT NULL
createdAt:          int NOT NULL            (ms timestamp)

(:Posting)
id:                 string NOT NULL INDEX
revisionId:         string
ownerFullName:      string
heading:            string
bodyPreview:        string                  (Body)
createdAt:          int                     (sec timestamp)
editedAt:           int                     (sec timestamp)
viewPrincipal:      string
scan:               boolean/int             (ScanStatus)
scannedAt:          int                     (ms timestamp)
scanComments:       boolean/int             (ScanStatus)
commentsScannedAt:  int                     (ms timestamp)
documentId:         string
INDEX ON (scan, scannedAt)
INDEX ON (scanComments, commentsScannedAt)

(:Publication)
feedName:           string NOT NULL
storyId:            string NOT NULL
publishedAt:        int NOT NULL INDEX      (sec timestamp)

(:Version) UNIQUE
version:            int NOT NULL

Relationships
-------------

(:MoeraNode|Posting|Comment)-[:AVATAR]->(:MediaFile)
shape:              string

(:MoeraNode)-[:BLOCKS]->(:MoeraNode)
blockedOperation:   string NOT NULL         (BlockedOperation)

(:Favor)-[:CAUSED_BY]->(:Publication|Comment)

(:MoeraNode)-[:CLOSE_TO]->(:MoeraNode)
distance:           float NOT NULL

(:Publication)-[:CONTAINS]->(:Posting)

(:Favor)-[:DONE_BY]->(:MoeraNode)

(:Favor)-[:DONE_TO]->(:MoeraNode|Posting)

(:MoeraNode)-[:FRIEND]->(:MoeraNode)

(:MoeraNode)<-[:OWNER]-(:Posting|Comment)

(:Publication)-[:PUBLISHED_IN]->(:MoeraNode)

(:Comment)-[:REPLIED_TO]->(:Comment)

(:MoeraNode)<-[:SCANS]-(:Job)

(:MoeraNode)<-[:SOURCE]-(:Posting)

(:MoeraNode)-[:SUBSCRIBED]->(:MoeraNode)
feedName:           string NOT NULL

(:MoeraNode)<-[:SUBSCRIBES]-(:Job)

(:Comment)-[:UNDER]->(:Posting)
