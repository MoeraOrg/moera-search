Neo4j Database Schema
=====================

Nodes
-----

(:Attachment)
mediaId             string NOT NULL
mimeType            string NOT NULL
size                int NOT NULL
textContent         string

(:CacheMediaDigest)
nodeName            string NOT NULL
mediaId             string NOT NULL
digest              byte[] NOT NULL
INDEX cache_media_digest_primary ON (nodeName, mediaId)

(:CachePostingDigest)
nodeName            string NOT NULL
postingId           string NOT NULL
revisionId          string NOT NULL
digest              byte[] NOT NULL
INDEX cache_posting_digest_primary ON (nodeName, postingId, revisionId)

(:CacheCommentDigest)
nodeName            string NOT NULL
postingId           string NOT NULL
commentId           string
revisionId          string NOT NULL
digest              byte[] NOT NULL
INDEX cache_comment_digest_primary ON (nodeName, postingId, commentId, revisionId)

(:Comment)
id                  string NOT NULL
revisionId          string NOT NULL
ownerFullName       string
heading             string NOT NULL
repliedTo           string                  (SearchRepliedTo)
bodyPreview         string NOT NULL         (Body)
imageCount          int NOT NULL
videoPresent        boolean NOT NULL
createdAt           int NOT NULL            (sec timestamp)
editedAt            int                     (sec timestamp)
viewPrincipal       string
scan                boolean/int             (ScanStatus)
scannedAt           int                     (ms timestamp)
scanReactions       boolean/int             (ScanStatus)
reactionsScannedAt  int                     (ms timestamp)
documentId          string
sheriffMarks        string[]
moment              int
INDEX comment_id ON (id)
INDEX comment_scan ON (scan, scannedAt)
INDEX comment_scan_reactions ON (scanReactions, reactionsScannedAt)

(:Entry)
id                  string NOT NULL
revisionId          string NOT NULL
ownerFullName       string
heading             string NOT NULL
bodyPreview         string NOT NULL         (Body)
imageCount          int NOT NULL
videoPresent        boolean NOT NULL
createdAt           int NOT NULL            (sec timestamp)
editedAt            int                     (sec timestamp)
viewPrincipal       string
documentId          string
sheriffMarks        string[]
moment              int
UNIQUE entry_document_id ON (documentId)
INDEX entry_moment ON (moment)

(:Favor)
value               float NOT NULL
decayHours          int NOT NULL
createdAt           int NOT NULL            (ms timestamp)
deadline            int NOT NULL INDEX      (ms timestamp)
INDEX favor_deadline ON (deadline)

(:Hashtag)
name                string NOT NULL
createdAt           int NOT NULL            (ms timestamp)
UNIQUE hashtag_name ON (name)

(:Job)
id                  string NOT NULL
jobType             string NOT NULL
jobKey              string INDEX
parameters          string NOT NULL
state               string
retries             int
waitUntil           int                     (ms timestamp)
UNIQUE job_id ON (id)
INDEX job_key ON (jobKey)

(:MediaFile)
id                  string NOT NULL
mimeType            string NOT NULL
sizeX               int
sizeY               int
orientation         int NOT NULL
fileSize            int NOT NULL
exposed             boolean NOT NULL
digest              byte[]
createdAt           int NOT NULL            (ms timestamp)
UNIQUE media_file_id ON (id)

(:MoeraNode)
name                string NOT NULL
fullName            string
title               string
scanProfile         boolean/int             (ScanStatus)
profileScannedAt    int                     (ms timestamp)
subscriberId        string
scanPeople          boolean/int             (ScanStatus)
peopleScannedAt     int                     (ms timestamp)
closeToUpdatedAt    int                     (ms timestamp)
closeToCleanedUpAt  int                     (ms timestamp)
scanTimeline        boolean/int             (ScanStatus)
timelineScannedAt   int                     (ms timestamp)
scanSheriff         boolean/int             (ScanStatus)
sheriffScannedAt    int                     (ms timestamp)
sheriffMarks        string[]
ownerSheriffMarks   string[]
UNIQUE moera_node_name ON (name)
FULLTEXT moera_node_full_name ON (fullName)
INDEX moera_node_scan_profile ON (scanProfile, profileScannedAt)
INDEX moera_node_scan_people ON (scanPeople, peopleScannedAt)
INDEX moera_node_close_to_updated ON (closeToUpdatedAt)
INDEX moera_node_close_to_cleaned_up ON (closeToCleanedUpAt)
INDEX moera_node_scan_timeline ON (scanTimeline, timelineScannedAt)

(:NamingService) UNIQUE
scanTimestamp       int NOT NULL
scannedAt           int                     (ms timestamp)

(:PendingUpdate)
id                  string NOT NULL
type                string NOT NULL
jobParameters       string NOT NULL
createdAt           int NOT NULL            (ms timestamp)
UNIQUE pending_update_id ON (id)

(:Posting)
id                  string NOT NULL
revisionId          string NOT NULL
ownerFullName       string
heading             string NOT NULL
bodyPreview         string NOT NULL         (Body)
imageCount          int NOT NULL
videoPresent        boolean NOT NULL
createdAt           int NOT NULL            (sec timestamp)
editedAt            int                     (sec timestamp)
viewPrincipal       string
scan                boolean/int             (ScanStatus)
scannedAt           int                     (ms timestamp)
scanComments        boolean/int             (ScanStatus)
commentsScannedAt   int                     (ms timestamp)
scanReactions       boolean/int             (ScanStatus)
reactionsScannedAt  int                     (ms timestamp)
documentId          string
sheriffMarks        string[]
moment              int
readPopularity      float
commentPopularity   float
popularity          float
recommendationOrder int NOT NULL
INDEX posting_id ON (id)
INDEX posting_scan ON (scan, scannedAt)
INDEX posting_scan_comments ON (scanComments, commentsScannedAt)
INDEX posting_scan_reactions ON (scanReactions, reactionsScannedAt)
INDEX posting_read_popularity ON (readPopularity)
INDEX posting_comment_popularity ON (commentPopularity)
INDEX posting_popularity ON (popularity)
INDEX posting_recommendation_order ON (recommendationOrder)

(:Publication)
feedName            string NOT NULL
storyId             string NOT NULL
publishedAt         int NOT NULL            (sec timestamp)
INDEX publication_feed_name ON (feedName)
INDEX publication_published_at ON (publishedAt)

(:Reaction)
ownerFullName       string
negative            boolean NOT NULL
emoji               int NOT NULL
createdAt           int NOT NULL            (sec timestamp)
viewPrincipal       string

(:Upgrade) UNIQUE

(:Version) UNIQUE
version             int NOT NULL

Relationships
-------------

(:Posting|Comment)<-[:ATTACHED]->(:Attachment)

(:MoeraNode|Posting|Comment|Reaction)-[:AVATAR]->(:MediaFile)
shape               string

(:MoeraNode)-[:BLOCKS]->(:MoeraNode)
blockedOperation:   string NOT NULL         (BlockedOperation)

(:Favor)-[:CAUSED_BY]->(:Publication|Comment|Reaction)

(:MoeraNode)-[:CLOSE_TO]->(:MoeraNode)
distance            float NOT NULL
updatedAt           int NOT NULL            (ms timestamp)

(:Publication)-[:CONTAINS]->(:Posting)

(:Favor)-[:DONE_BY]->(:MoeraNode)

(:Favor)-[:DONE_TO]->(:MoeraNode|Posting)

(:MoeraNode)-[:DONT_RECOMMEND]->(:MoeraNode|Posting)

(:Hashtag)<-[:MARKED_WITH]-(:Entry)

(:Posting|Comment)-[:MEDIA_PREVIEW]->(:MediaFile)
mediaId             string

(:MoeraNode)-[:FRIEND]->(:MoeraNode)

(:MoeraNode)<-[:OWNER]-(:Posting|Comment|Reaction)

(:Publication)-[:PUBLISHED_IN]->(:MoeraNode)

(:Reaction)-[:REACTS_TO]->(:Posting|Comment)

(:Comment)-[:REPLIED_TO]->(:Comment)

(:Upgrade)-[:RESCAN]->(:Posting|Comment)

(:MoeraNode)<-[:SCANS]-(:Job)

(:MoeraNode)<-[:SOURCE]-(:Posting)

(:MoeraNode)-[:SUBSCRIBED]->(:MoeraNode)
feedName            string NOT NULL

(:MoeraNode)<-[:SUBSCRIBES]-(:Job)

(:Comment)-[:UNDER]->(:Posting)

(:MoeraNode)-[:WAS_RECOMMENDED]->(:Posting)
